// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: car_brand.sql

package db

import (
	"context"
	"database/sql"
)

const createCarBrand = `-- name: CreateCarBrand :execresult
INSERT INTO car_brand (name, description)
VALUES (?, ?)
`

type CreateCarBrandParams struct {
	Name        string
	Description sql.NullString
}

func (q *Queries) CreateCarBrand(ctx context.Context, arg CreateCarBrandParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createCarBrand, arg.Name, arg.Description)
}

const deleteCarBrand = `-- name: DeleteCarBrand :execresult
DELETE FROM car_brand WHERE car_brand_id = ?
`

func (q *Queries) DeleteCarBrand(ctx context.Context, carBrandID int32) (sql.Result, error) {
	return q.db.ExecContext(ctx, deleteCarBrand, carBrandID)
}

const getCarBrand = `-- name: GetCarBrand :one
SELECT car_brand_id, name, description
FROM car_brand
WHERE car_brand_id = ?
`

func (q *Queries) GetCarBrand(ctx context.Context, carBrandID int32) (CarBrand, error) {
	row := q.db.QueryRowContext(ctx, getCarBrand, carBrandID)
	var i CarBrand
	err := row.Scan(&i.CarBrandID, &i.Name, &i.Description)
	return i, err
}

const listCarBrands = `-- name: ListCarBrands :many
SELECT car_brand_id, name, description
FROM car_brand
ORDER BY name
`

func (q *Queries) ListCarBrands(ctx context.Context) ([]CarBrand, error) {
	rows, err := q.db.QueryContext(ctx, listCarBrands)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []CarBrand
	for rows.Next() {
		var i CarBrand
		if err := rows.Scan(&i.CarBrandID, &i.Name, &i.Description); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateCarBrand = `-- name: UpdateCarBrand :execresult
UPDATE car_brand SET
    name = ?,
    description = ?
WHERE car_brand_id = ?
`

type UpdateCarBrandParams struct {
	Name        string
	Description sql.NullString
	CarBrandID  int32
}

func (q *Queries) UpdateCarBrand(ctx context.Context, arg UpdateCarBrandParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, updateCarBrand, arg.Name, arg.Description, arg.CarBrandID)
}
